<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.flutter_back.flutter_back.mapper.UserMapper">

    <resultMap type="Users" id="userMap">
        <id property="no" column="no" />
        
        <result property="no" column="no" />
        <result property="id" column="id" />
        <result property="username" column="username" />
        <result property="password" column="password" />
        <result property="name" column="name" />
        <result property="email" column="email" />
        <result property="enabled" column="enabled" />
        <result property="createdAt" column="created_at" />
        <result property="updatedAt" column="updated_at" />
        
        <!-- 1:N 관계 매핑 -->
        <!-- 
            property : 현재 resultMap 의 객체 안에 매핑해줄 변수명
            select : 1:N 관계의 서브쿼리 ID
            column : 서브쿼리에 넘겨줄 값의 컬럼명
            ofType : 서브쿼리로 조회된 데이터를 매핑할 객체타입
         -->
        <collection property="authList" select="authList" column="username" ofType="UserAuth"></collection>
    </resultMap>
        
    <resultMap type="UserAuth" id="authMap">
        <result property="no" column="no" />
        <result property="username" column="username" />
        <result property="auth" column="auth" />
    </resultMap>

  
    <!-- 회원 조회 - id -->
    <select id="select" resultMap="userMap">
        SELECT *
        FROM users
        WHERE username = #{username}
    </select>


    <!-- 회원 권한 -->
    <select id="authList" resultMap="authMap">
        SELECT *
        FROM user_auth
        WHERE username = #{username}
    </select>


    <!-- 회원 가입 -->
    <insert id="join">
        INSERT INTO users ( id, username, password, name, email )
        VALUES ( #{id}, #{username}, #{password}, #{name}, #{email} )
    </insert>

    <!-- 회원 정보 수정 -->
    <update id="update">
        UPDATE users
            <set>
                <if test="password != null">password = #{password},</if>
                <if test="name != null">name = #{name},</if>
                <if test="email != null">email = #{email},</if>
                updated_at = now()
            </set>
        WHERE username = #{username}
    </update>

    <!-- 회원 권한 등록 -->
    <insert id="insertAuth">
        INSERT INTO user_auth ( username, auth )
        VALUES ( #{username}, #{auth} )
    </insert>

    <!-- 회원 삭제 -->
    <delete id="delete">
        DELETE FROM users
         WHERE username = #{username}
    </delete>

</mapper>